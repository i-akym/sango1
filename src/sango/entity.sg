###########################################################################
# MIT License                                                             #
# Copyright (c) 2018 Isao Akiyama                                         #
#                                                                         #
# Permission is hereby granted, free of charge, to any person obtaining   #
# a copy of this software and associated documentation files (the         #
# "Software"), to deal in the Software without restriction, including     #
# without limitation the rights to use, copy, modify, merge, publish,     #
# distribute, sublicense, and/or sell copies of the Software, and to      #
# permit persons to whom the Software is furnished to do so, subject to   #
# the following conditions:                                               #
#                                                                         #
# The above copyright notice and this permission notice shall be          #
# included in all copies or substantial portions of the Software.         #
#                                                                         #
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,         #
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF      #
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  #
# IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY    #
# CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,    #
# TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE       #
# SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.                  #
###########################################################################
module "sango.entity" ;;

extend <independent> -> ent_d @public :=
| existence$ ;;

data <eref> @opaque := @native ;;  # entity ref
data <wref> @opaque := @native ;;  # weak ref

eval
  <ent_d+> *X
  <<void fun> maybe> *Invalidator_
  create_entity @public -> <eref> @native ;;

eval <eref> *Entity read @public -> <ent_d+> @native ;;
eval <eref> *Entity <ent_d+> *X write | swap @public -> <ent_d+> @native ;;

eval
  <eref> *Entity
  <<wref void fun> maybe> *Listener_
  create_weak_holder @public -> <wref> @native ;;

eval <wref> *W get @public -> <eref maybe> @native ;;
eval <wref> *W clear @public -> <void> @native ;;

