import "sango.util.queue" -> queue ;;
import "sango.util.queue.feature" -> queuef ;;

eval <int queue.queue> *Q0 testA00 @public -> <void> {
  Q0 queue.empty? = true$,
  Q0 1 queue.enqueue = *Q1,
  Q1 2 queue.enqueue = *Q2,
  Q2 queue.length = 2,
  Q2 queue.head = 1 value$,
  Q2 queue.dequeue = (| 1, *Q3 |) value$,
  Q3 3 queue.enqueue = *Q4,
  Q4 queue.dequeue = (| 2, *Q5 |) value$,
  Q5 queue.dequeue = (| 3, *Q6 |) value$,
  Q6 queue.dequeue = none$,
  Q6 4 queue.enqueue = *Q7,
  Q7 queue.length = 1,
  Q7 queue.clear = *Q8,
  Q8 queue.empty? = true$,
  Q7 [ 11, 12 ] queue.enqueue_list = *Q9,
  Q9 queue.length = 3,
  Q9 queue.iter = *I,
  I next = (| **, *I' |) value$,
  I' next = (| **, *I'' |) value$,
  I'' next = (| **, *I''' |) value$,
  I''' next = none$,
  void$
} ;;
eval <*T![ int queuef.a'queue ]> *Q0 testB00 @public -> <void> {
  Q0 queuef.empty? = true$,
  Q0 1 queuef.enqueue = *Q1,
  Q1 2 queuef.enqueue = *Q2,
  Q2 queuef.length = 2,
  Q2 queuef.head = 1 value$,
  Q2 queuef.dequeue = (| 1, *Q3 |) value$,
  Q3 3 queuef.enqueue = *Q4,
  Q4 queuef.dequeue = (| 2, *Q5 |) value$,
  Q5 queuef.dequeue = (| 3, *Q6 |) value$,
  Q6 queuef.dequeue = none$,
  Q6 4 queuef.enqueue = *Q7,
  Q7 queuef.length = 1,
  Q7 queuef.clear = *Q8,
  Q8 queuef.empty? = true$,
  Q7 [ 11, 12 ] queuef.enqueue_list = *Q9,
  Q9 queuef.length = 3,
  Q9 queuef.iter = *I,
  I next = (| **, *I' |) value$,
  I' next = (| **, *I'' |) value$,
  I'' next = (| **, *I''' |) value$,
  I''' next = none$,
  void$
} ;;
