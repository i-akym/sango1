import "sango.debug" -> debug ;;
import "sango.io.stdio" -> stdio ;;
import "sango.num.bigint" -> bi ;;
import "sango.system.runtime" -> runtime ;;
import "sango.util.iter" -> iter ;;
import "sango.util.random" -> rand ;;

eval _main_ -> <void> {
  runtime.terminate_on_my_abnormal_end,
  test
} ;;

eval test -> <void> {
  test001 = *Randoms_r,
  test101 = Randoms_r,
  test111,
  void$
} ;;

eval test001 -> <real list> {
  (1 bi.bigint) rand.new_generator = *Gen,
  "Generated numbers" stdio.print_and_newline,
  100 Gen [] &\ <int> *I <real iter> *G <real list> *L -> <real list> {
    I case {
    ; 0 -> L
    ; ** ->
      G next >> value = (| *R, *G' |),
      R debug.repr >> stdio.print_and_newline,
      (I dec) G' [ R ; L ] &&
    }
  }
} ;;
eval test101 -> <real list> {
  (1 bi.bigint) rand.new_generator >> rand.start_service = *Svc,
  100 [] &\ <int> *I <real list> *L -> <real list> {
    I case {
    ; 0 -> L
    ; ** ->
      Svc rand.generate = *R,
      (I dec) [ R ; L ] &&
    }
  }
} ;;
eval test111 -> <void> {
  "Numbers generated by built-in service" stdio.print_and_newline,
  100 &\ <int> *I -> <void> {
    I case {
    ; 0 ->
    ; ** ->
      rand.generate >> debug.repr >> stdio.print_and_newline,
      (I dec) &&
    }
  }
} ;;
