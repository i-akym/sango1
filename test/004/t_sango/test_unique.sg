import "sango.debug" -> debug ;;
import "sango.io.stdio" -> stdio ;;
import "sango.unique" -> uniq ;;

eval _main_ -> <void> {
  test
} ;;

eval test -> <void> {
  test000,
  test100,
  void$
} ;;

eval test000 -> <void> {
  uniq.new_unique = *U0, U0 debug.repr >> stdio.print_and_newline,
  uniq.new_unique = *U1, U1 debug.repr >> stdio.print_and_newline,
  uniq.new_unique = *U2, U2 debug.repr >> stdio.print_and_newline,
  uniq.new_unique = *U3, U3 debug.repr >> stdio.print_and_newline,
  uniq.new_unique = *U4, U4 debug.repr >> stdio.print_and_newline,
  U0 case {
  ; U1 -> assertion_error$ "Not unique." new_exception >> throw
  ; U2 -> assertion_error$ "Not unique." new_exception >> throw
  ; U3 -> assertion_error$ "Not unique." new_exception >> throw
  ; U4 -> assertion_error$ "Not unique." new_exception >> throw
  ; ** ->
  }
} ;;
eval test100 -> <void> {
  uniq.new_unique = *U,
  U &(U uniq._feature_a'unique) = U,
  void$
} ;;
