import "sango.debug" -> debug ;;
import "sango.entity.box" -> box ;;
import "sango.entity.existence" -> ex ;;
import "sango.entity.graph" -> gr ;;
import "sango.io.stdio" -> stdio ;;
import "sango.list" -> list ;;
import "sango.system.runtime" -> runtime ;;
import "sango.util.set" -> set ;;
import "sango.util.set.simpleset" -> sset ;;

eval _main_ -> <void> {
  test
} ;;

eval test -> <void> {
  test000,
  void$
} ;;

eval test000 -> <void> {
  "N0" none$ box.create_box = *N0,
  "N1" none$ box.create_box = *N1,
  "N2" none$ box.create_box = *N2,
  "N3" none$ box.create_box = *N3,
  "NN" none$ box.create_box = *NN,
  (&\\ <<cstr box.box_h> ex.dress_fs> { box.dress_fs }) gr.create_graph = *G0,
  G0 gr.nodes = [],
  G0 N0 gr.contain? = false$,
  G0 N0 gr.include = *G1,  # N0
  G1 gr.nodes = [ N0 ],
  G1 N0 gr.contain? = true$,
  G1 N1 gr.include = *G2,  # N0, N1
  G2 gr.nodes >> list.length = 2,
  G2 N0 "first-child" N1 gr.link = *G3,  # N0, N1
  G3 N0 "last-child" N3 gr.link = *G4,  # N0, N1, N3
  G4 N1 "next-sibling" N2 gr.link = *G5,  # N0, N1, N2, N3
  G5 N2 "next-sibling" N3 gr.link = *G6,  # N0, N1, N2, N3
  G6 gr.nodes >> list.length = 4,
  G6 N2 "prev-sibling" N1 gr.link = *G7,
  G7 N2 "self" N2 gr.link = *G8,  # cyclic
  G8 N3 "prev-sibling" N2 gr.link = *G9,
  G9 N3 "parent" N0 gr.link = *G10,
  G10 NN gr.include = *G11,  # N0, N1, N2, N3, NN
  G11 NN "foo" N0 gr.link = *G12,
  G12 N3 gr.links >> case { [ "prev-sibling", "parent" ] -> ; [ "parent", "prev-sibling" ] -> },
  G12 N0 "first-child" gr.traverse = N1 value$,
  G12 N1 "parent" gr.traverse = none$,
  G12 [ N1 ] gr.reachable_nodes >> list.length = 4,  # N0, N1, N2, N3
  G12 [ N1, N3 ] gr.reachable_nodes >> list.length = 4,  # N0, N1, N2, N3
  G12 [ NN ] gr.reachable_nodes >> list.length = 5,  # N0, N1, N2, N3, NN
  G12 N2 gr.exclude = *G13,  # N0, N1, N3, NN
  G13 gr.nodes >> list.length = 4,
  G13 N1 "next-sibling" gr.traverse = none$,
  G13 N1 gr.links = [],
  G13 gr.clear = *G20,
  G20 gr.nodes = [],
  void$
} ;;
