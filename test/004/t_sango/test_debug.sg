import "sango.debug" -> debug ;;
import "sango.io.stdio" -> stdio ;;
import "sango.system.runtime" -> runtime ;;

extend <exc_desc> := e001_exc$ ;;

eval _main_ -> <void> {
  runtime.terminate_on_my_abnormal_end,
  test
} ;;

eval test -> <void> {
  test001,
  test002,
  test101,
  test102,
  test103,
  test104,
  void$
} ;;

eval exc001 -> <exception> { e001_exc$ "Test exception occurred." new_exception } ;;
eval exc002 -> <_> { exc001 >> throw } ;;
eval test001 -> <bool> { debug.check_assertion? } ;;
eval test002 -> <void> { ^exc002 try = *E exc$, "Exception info ----" stdio.print_and_newline, E stdio.cstdout debug.dump_to } ;;
eval test101 -> <void> { 101 debug.repr >> stdio.print_and_newline } ;;
eval test102 -> <void> { (102 value$) debug.repr >> stdio.print_and_newline } ;;
eval test103 -> <void> { (| 103, 't' |) debug.repr >> stdio.print_and_newline } ;;
eval test104 -> <void> { [ 104, -104 ] debug.repr >> stdio.print_and_newline } ;;
